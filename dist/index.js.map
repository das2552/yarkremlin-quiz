{"version":3,"file":"index.js","mappings":"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","sources":["webpack://webpack-template/./src/blocks/quiz/quizConstructor.js","webpack://webpack-template/./src/blocks/quiz/quizRenderView.js","webpack://webpack-template/./src/blocks/quiz/helpres.js","webpack://webpack-template/./src/blocks/quiz/quizStepRenderView.js","webpack://webpack-template/./src/blocks/quiz/quizStore.js","webpack://webpack-template/./src/blocks/quiz/quizController.js","webpack://webpack-template/./src/blocks/quiz/quizMediator.js","webpack://webpack-template/./src/helpers/helpers.js","webpack://webpack-template/./src/blocks/quiz/quizConstants.js","webpack://webpack-template/./src/blocks/quiz/quizStepController.js","webpack://webpack-template/./src/blocks/quiz/quizStepConstructor.js","webpack://webpack-template/./src/blocks/quiz/quiz.js"],"sourcesContent":["export default (element) => {\r\n  const initialState = {\r\n    score: 0,\r\n    scoreState: null,\r\n    activeStepIndex: 0,\r\n    stepsCount: 8,\r\n    visibilitySubmitButtonState: 'hidden',\r\n    disablingSubmitButtonState: 'disabled',\r\n    visibilityResult: 'hidden',\r\n    result: null,\r\n    userActivityState: 'idle',\r\n  };\r\n\r\n  const state = {\r\n    ...initialState,\r\n  };\r\n\r\n  const elements = {\r\n    submitButton: element.querySelector('.quiz__submit'),\r\n    stepsInfo: element.querySelector('.quiz__steps-info'),\r\n    steps: Array.from(element.querySelectorAll('.quiz__step')),\r\n    resultsDataElement: element.querySelector('.quiz__results-data'),\r\n    form: element.querySelector('.quiz__form'),\r\n    result: element.querySelector('.quiz__result'),\r\n    resultScore: element.querySelector('.quiz__result-score'),\r\n    resultCard: element.querySelector('.quiz__result-card'),\r\n    resetButton: element.querySelector('.quiz__reset'),\r\n  };\r\n\r\n  return {\r\n    state,\r\n    elements,\r\n    initialState,\r\n  };\r\n};\r\n","import { formatQuizStepsInfo } from './helpres';\r\n\r\nexport default {\r\n  renderSubmitButton: (props) => {\r\n    const { state, elements } = props;\r\n\r\n    if (state.visibilitySubmitButtonState === 'shown') {\r\n      elements.submitButton.classList.remove('button_hidden');\r\n    }\r\n\r\n    if (state.disablingStepNavState === 'enabled') {\r\n      elements.submitButton.disabled = false;\r\n    }\r\n\r\n    if (state.gettingResultProcessState === 'processing') {\r\n      elements.submitButton.disabled = true;\r\n    }\r\n\r\n    if (state.gettingResultProcessState === 'finished') {\r\n      elements.submitButton.disabled = false;\r\n    }\r\n\r\n    if (state.gettingResultProcessState === 'failed') {\r\n      elements.submitButton.disabled = true;\r\n    }\r\n  },\r\n\r\n  renderStepsInfo: (props) => {\r\n    const { state, elements } = props;\r\n\r\n    const stepsInfoValue = formatQuizStepsInfo(state.activeStepIndex, state.stepsCount);\r\n    elements.stepsInfo.textContent = stepsInfoValue;\r\n  },\r\n\r\n  renderSteps: (props) => {\r\n    const { state, elements } = props;\r\n\r\n    const prevStep = elements.steps[state.activeStepIndex - 1];\r\n    const currentStep = elements.steps[state.activeStepIndex];\r\n    prevStep.classList.remove('quiz__step_shown');\r\n    currentStep.classList.add('quiz__step_shown');\r\n  },\r\n\r\n  renderResultsData: (props) => {\r\n    const { state, elements } = props;\r\n\r\n    elements.resultsDataElement.value = state.score;\r\n  },\r\n};\r\n","export const formatQuizStepsInfo = (currentPointIndex, pointsCount) => {\r\n  const currentPoint = currentPointIndex + 1;\r\n  return `${currentPoint} из ${pointsCount} вопросов`;\r\n};\r\n\r\nexport const formatQuizResultInfo = (score, pointsCount) => `Баллов набрано: ${score} из ${pointsCount}`;\r\n\r\nexport const getCorrectAnswerIndex = (answers) => {\r\n  let answerIndex;\r\n\r\n  answers.forEach((answer, index) => {\r\n    if (answer.dataset.correctAnswer !== undefined) {\r\n      answerIndex = index;\r\n    }\r\n  });\r\n\r\n  return answerIndex;\r\n};\r\n","export default {\r\n  renderAnswer: (props) => {\r\n    const { state, elements } = props;\r\n    const correctAnswerElement = elements.answers[state.correctAnswerIndex];\r\n    const correctAnswerDescriptionElement = correctAnswerElement.querySelector('.quiz__answer');\r\n    const correntAnswerIconElement = correctAnswerElement.querySelector('.quiz__icon');\r\n\r\n    if (state.selectedAnswerState === 'incorrect') {\r\n      const selectedAnswerElement = elements.answers[state.selectedAnswerIndex];\r\n      const selectedAnswerIconElement = selectedAnswerElement.querySelector('.quiz__icon');\r\n\r\n      selectedAnswerElement.classList.add('quiz__item_incorrect');\r\n      selectedAnswerIconElement.classList.add('icon_incorrect');\r\n      selectedAnswerIconElement.classList.remove('icon_hidden');\r\n    }\r\n\r\n    correctAnswerElement.classList.add('quiz__item_correct');\r\n    correctAnswerDescriptionElement.classList.remove('quiz__answer_hidden');\r\n    correntAnswerIconElement.classList.add('icon_correct');\r\n    correntAnswerIconElement.classList.remove('icon_hidden');\r\n\r\n    elements.fields.forEach((answerField) => {\r\n      answerField.classList.add('quiz__field_hidden');\r\n    });\r\n\r\n    elements.answers.forEach((answer) => {\r\n      answer.classList.add('quiz__item_disabled');\r\n      answer.classList.remove('quiz__item_hover');\r\n    });\r\n  },\r\n\r\n  renderStepNav: (props) => {\r\n    const { state, elements } = props;\r\n\r\n    if (state.disablingStepNavState === 'enabled') {\r\n      elements.stepNav.disabled = false;\r\n    }\r\n\r\n    if (state.visibilityStepNavState === 'hidden') {\r\n      elements.stepNav.classList.add('button_hidden');\r\n    }\r\n  },\r\n};\r\n","export default {\r\n  lowRating: {\r\n    result: 'Вы пока чужак, вам нужно подучить ярославские словечки. Кажется про вас могут подумать, что вы кочевряга.',\r\n    descr: 'Кочевряга — гордый, высокомерный человек.',\r\n  },\r\n\r\n  mediumRating: {\r\n    result: 'Досужий вы человек! Вы быстро схватываете, но есть слова которые вы еще не знаете.',\r\n    descr: 'Досужий — смекалистый, догадливы, любопытный.',\r\n  },\r\n\r\n  hightRating: {\r\n    result: 'Вас не обояришь! Вы легко сойдете за местного.',\r\n    descr: 'Обоярить — обмануть.',\r\n  },\r\n};\r\n","/* eslint-disable no-param-reassign */\r\nimport quizConstructor from './quizConstructor';\r\nimport quizRenderView from './quizRenderView';\r\nimport quizStepController from './quizStepController';\r\nimport quizMediator from './quizMediator';\r\n\r\nimport quizConstants from './quizConstants';\r\nimport quizStore from './quizStore';\r\n\r\nimport { formatQuizResultInfo } from './helpres';\r\nimport { debounce } from '../../helpers/helpers';\r\n\r\nconst buildResultCardTemplate = ({ result, descr }) => (\r\n  `<p class=\"quiz__card-text\">${result}</p><p class=\"quiz__card-descr\">${descr}</p>`\r\n);\r\n\r\nconst renderResult = (state, elements) => {\r\n  if (state.visibilityResult === 'shown') {\r\n    elements.form.classList.remove('quiz__section_shown');\r\n    elements.result.classList.add('quiz__section_shown');\r\n  }\r\n\r\n  if (state.visibilityResult === 'hidden') {\r\n    elements.form.classList.add('quiz__section_shown');\r\n    elements.result.classList.remove('quiz__section_shown');\r\n  }\r\n\r\n  if (state.scoreState === 'low') {\r\n    elements.resultScore.classList.add('quiz__result-score_low');\r\n  }\r\n\r\n  if (state.scoreState === 'medium') {\r\n    elements.resultScore.classList.add('quiz__result-score_medium');\r\n  }\r\n\r\n  if (state.scoreState === 'hight') {\r\n    elements.resultScore.classList.add('quiz__result-score_hight');\r\n  }\r\n\r\n  const resultCardTemplate = buildResultCardTemplate(state.result);\r\n  elements.resultCard.innerHTML = resultCardTemplate;\r\n  elements.resultScore.textContent = formatQuizResultInfo(state.score, state.stepsCount);\r\n};\r\n\r\nexport default (element) => {\r\n  const quizInstace = quizConstructor(element);\r\n  const quizInstaceMediator = quizMediator(quizInstace);\r\n\r\n  const { state, elements } = quizInstace;\r\n  state.stepsCount = elements.steps.length;\r\n\r\n  quizRenderView.renderStepsInfo(quizInstace);\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    const { score } = state;\r\n\r\n    state.visibilityResult = 'shown';\r\n\r\n    if (score < quizConstants.mediumRatingMinValue) {\r\n      state.result = quizStore.lowRating;\r\n      state.scoreState = 'low';\r\n    }\r\n\r\n    if (score > quizConstants.mediumRatingMinValue) {\r\n      state.result = quizStore.hightRating;\r\n      state.scoreState = 'hight';\r\n    }\r\n\r\n    if (score >= quizConstants.mediumRatingMinValue\r\n      && score <= quizConstants.mediumRatingMaxValue) {\r\n      state.result = quizStore.mediumRating;\r\n      state.scoreState = 'medium';\r\n    }\r\n\r\n    renderResult(state, elements);\r\n  };\r\n\r\n  const windowReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const preventAutoReload = debounce(windowReload, quizConstants.userInactionDelay);\r\n\r\n  elements.resetButton.addEventListener('click', () => windowReload);\r\n\r\n  elements.form.addEventListener('submit', formSubmitHandler);\r\n\r\n  elements.steps.forEach((step, index) => {\r\n    quizStepController(step, index, quizInstaceMediator);\r\n  });\r\n\r\n  document.addEventListener('click', preventAutoReload);\r\n};\r\n","import quizRenderView from './quizRenderView';\r\n\r\nexport default (quizInstace) => {\r\n  const { state } = quizInstace;\r\n\r\n  const updateScore = () => {\r\n    state.score += 1;\r\n    quizRenderView.renderResultsData(quizInstace);\r\n  };\r\n\r\n  const updateActiveStep = () => {\r\n    state.activeStepIndex += 1;\r\n    quizRenderView.renderStepsInfo(quizInstace);\r\n    quizRenderView.renderSteps(quizInstace);\r\n  };\r\n\r\n  const showSubmitButton = () => {\r\n    state.visibilitySubmitButtonState = 'shown';\r\n    quizRenderView.renderSubmitButton(quizInstace);\r\n  };\r\n\r\n  const enableSubmitButton = () => {\r\n    state.disablingStepNavState = 'enabled';\r\n    quizRenderView.renderSubmitButton(quizInstace);\r\n  };\r\n\r\n  const getLastStepIndex = () => state.stepsCount - 1;\r\n\r\n  const isLastStep = () => state.activeStepIndex === state.stepsCount - 1;\r\n\r\n  return {\r\n    updateScore,\r\n    updateActiveStep,\r\n    showSubmitButton,\r\n    enableSubmitButton,\r\n    getLastStepIndex,\r\n    isLastStep,\r\n  };\r\n};\r\n","export const debounce = (fn, ms) => {\r\n  let сooldown;\r\n\r\n  return function () {\r\n    clearTimeout(сooldown);\r\n    сooldown = setTimeout(() => fn.apply(this, arguments), ms);\r\n  };\r\n};\r\n","export default {\r\n  mediumRatingMinValue: 4,\r\n  mediumRatingMaxValue: 7,\r\n  userInactionDelay: 300000,\r\n};\r\n","import quizStepConstructor from './quizStepConstructor';\r\nimport quizStepRenderView from './quizStepRenderView';\r\nimport { getCorrectAnswerIndex } from './helpres';\r\n\r\nexport default (element, elementIndex, quizInstaceMediator) => {\r\n  const quizStepInstace = quizStepConstructor(element);\r\n  const { state, elements: { answers, fields, stepNav } } = quizStepInstace;\r\n\r\n  state.correctAnswerIndex = getCorrectAnswerIndex(answers);\r\n\r\n  const stepFieldChangeHandler = (index) => {\r\n    if (state.selectedAnswerIndex !== null) return;\r\n\r\n    state.selectedAnswerIndex = index;\r\n    state.disablingStepNavState = 'enabled';\r\n\r\n    if (state.selectedAnswerIndex === state.correctAnswerIndex) {\r\n      state.selectedAnswerState = 'correct';\r\n      quizInstaceMediator.updateScore();\r\n    } else {\r\n      state.selectedAnswerState = 'incorrect';\r\n    }\r\n\r\n    quizStepRenderView.renderAnswer(quizStepInstace);\r\n    quizStepRenderView.renderStepNav(quizStepInstace);\r\n\r\n    if (quizInstaceMediator.isLastStep()) quizInstaceMediator.enableSubmitButton();\r\n  };\r\n\r\n  const stepNavClickHandler = () => {\r\n    quizInstaceMediator.updateActiveStep();\r\n\r\n    if (quizInstaceMediator.isLastStep()) quizInstaceMediator.showSubmitButton();\r\n  };\r\n\r\n  stepNav.addEventListener('click', stepNavClickHandler);\r\n\r\n  fields.forEach((field, fieldIndex) => {\r\n    field.addEventListener('change', () => stepFieldChangeHandler(fieldIndex));\r\n  });\r\n\r\n  if (elementIndex === quizInstaceMediator.getLastStepIndex()) {\r\n    state.visibilityStepNavState = 'hidden';\r\n    quizStepRenderView.renderStepNav(quizStepInstace);\r\n  }\r\n};\r\n","export default (element) => {\r\n  const state = {\r\n    correctAnswerIndex: null,\r\n    selectedAnswerIndex: null,\r\n    selectedAnswerState: 'idle',\r\n    disablingStepNavState: 'disabled',\r\n    visibilityStepNavState: 'shown',\r\n  };\r\n\r\n  const elements = {\r\n    answersBox: element.querySelector('.quiz__items'),\r\n    answers: Array.from(element.querySelectorAll('.quiz__item')),\r\n    fields: Array.from(element.querySelectorAll('.quiz__field')),\r\n    stepNav: element.querySelector('.quiz__step-nav'),\r\n  };\r\n\r\n  return {\r\n    state,\r\n    elements,\r\n  };\r\n};\r\n","import quizController from './quizController';\r\n\r\nexport default () => {\r\n  const quizElements = Array.from(document.querySelectorAll('.quiz'));\r\n\r\n  quizElements.forEach((quizElement) => {\r\n    quizController(quizElement);\r\n  });\r\n};\r\n"],"names":["props","state","elements","visibilitySubmitButtonState","submitButton","classList","remove","disablingStepNavState","disabled","gettingResultProcessState","currentPointIndex","pointsCount","stepsInfoValue","activeStepIndex","stepsCount","stepsInfo","textContent","stepNav","visibilityStepNavState","add","result","descr","element","quizInstace","initialState","score","scoreState","disablingSubmitButtonState","visibilityResult","userActivityState","querySelector","steps","Array","from","querySelectorAll","resultsDataElement","form","resultScore","resultCard","resetButton","quizConstructor","quizInstaceMediator","updateScore","value","quizRenderView","updateActiveStep","prevStep","currentStep","showSubmitButton","enableSubmitButton","getLastStepIndex","isLastStep","quizMediator","length","fn","ms","сooldown","windowReload","window","location","reload","preventAutoReload","clearTimeout","setTimeout","apply","arguments","addEventListener","event","preventDefault","quizStore","resultCardTemplate","innerHTML","renderResult","forEach","step","index","elementIndex","quizStepInstace","correctAnswerIndex","selectedAnswerIndex","selectedAnswerState","answersBox","answers","fields","quizStepConstructor","answerIndex","answer","undefined","dataset","correctAnswer","getCorrectAnswerIndex","field","fieldIndex","correctAnswerElement","correctAnswerDescriptionElement","correntAnswerIconElement","selectedAnswerElement","selectedAnswerIconElement","answerField","quizStepRenderView","quizStepController","document","quizElement","quizController"],"sourceRoot":""}